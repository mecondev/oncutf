[project]
name = "oncutf"
version = "1.3.0"
description = "Advanced Batch File Renamer with EXIF Metadata Support and Professional UI"
authors = [
    {name = "Michael Economou", email = "info@oncut.gr"}
]
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = ["file-renamer", "batch-rename", "exif", "metadata", "photography", "pyqt5"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
]
dependencies = [
    "PyQt5>=5.15.11",
    "PyQt5-Qt5>=5.15.15",
    "PyQt5-sip>=12.15.0",
    "Pillow>=9.0.0",
    "charset-normalizer>=3.0.0",
    "psutil>=6.1.0",
    "aiofiles>=24.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-qt>=4.4.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.1",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    "black>=24.0.0"
]
test = [
    "pytest>=8.3.5",
    "pytest-qt>=4.4.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.1"
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["core*", "models*", "modules*", "utils*", "widgets*"]
exclude = ["tests*", "docs*", "examples*", "scripts*", "temp*", "backups*", "reports*", "logs*", "assets*", "resources*"]

[project.urls]
Homepage = "https://github.com/mecondev/oncutf"
Repository = "https://github.com/mecondev/oncutf"
Documentation = "https://github.com/mecondev/oncutf/tree/main/docs"
Issues = "https://github.com/mecondev/oncutf/issues"

# --------------------------
# mypy configuration
# --------------------------
[tool.mypy]
python_version = "3.12"
strict = true
ignore_missing_imports = true
warn_unused_configs = true
warn_return_any = true
warn_redundant_casts = true
exclude = '.*(backups|\.cache|temp|reports)/'  # Global exclude, only one allowed

[[tool.mypy.overrides]]
module = ["PyQt5.*"]
ignore_missing_imports = true
ignore_errors = true

# --------------------------
# Ruff configuration
# --------------------------
[tool.ruff]
target-version = "py312"
line-length = 100
fix = true
exclude = ["backups", ".cache", "temp", "reports", "venv", "__pycache__", "*.pyc"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
]
ignore = [
    "E501",   # line too long (handled by black)
    "N802",   # function name should be lowercase
    "F403",   # wildcard import
    "F405",   # name may be undefined
    "E402",   # module level import not at top
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "SIM102", # nested if statements
    "TCH001", # typing imports should be in TYPE_CHECKING block
    "TCH002", # typing imports should be in TYPE_CHECKING block
    "TCH003", # typing imports should be in TYPE_CHECKING block
]

[tool.ruff.lint.isort]
force-single-line = false
combine-as-imports = true
known-first-party = ["core", "models", "modules", "utils", "widgets"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# --------------------------
# Pytest
# --------------------------
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --tb=short --strict-markers --strict-config"
testpaths = ["tests"]
qt_api = "pyqt5"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gui: marks tests that require GUI",
    "exiftool: marks tests that require exiftool"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:PyQt5.*"
]

# --------------------------
# Coverage
# --------------------------
[tool.coverage.run]
source = [".", "core", "models", "modules", "utils", "widgets"]
omit = [
    "tests/*",
    "venv/*",
    "*/site-packages/*",
    "setup.py",
    "conftest.py",
    "backups/*",
    "temp/*",
    "reports/*",
    "*.pyc",
    "__pycache__/*"
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

# ----------------------------------------
# Black configuration
# ----------------------------------------
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '/(\.eggs|\.git|\.hg|\.mypy_cache|\.tox|\.venv|build|dist|backups|temp|reports)/'

# ----------------------------------------
# Pre-commit hooks configuration
# ----------------------------------------
# Note: Pre-commit configuration moved to .pre-commit-config.yaml
# ----------------------------------------
